{"ast":null,"code":"import axios from 'axios';\nimport LineChart from '@/components/SimulateChart.vue';\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, LineElement, LinearScale, PointElement, CategoryScale);\nexport default {\n  name: \"monitoringSimulation\",\n  components: {\n    LineChart,\n    Line\n  },\n\n  data() {\n    return {\n      storagePeriod: null,\n      demand: null,\n      supply: null,\n      engineGo: true,\n      GoData: null,\n      Data: null,\n      loaded: false\n    };\n  },\n\n  props: {\n    chartId: {\n      type: String,\n      default: 'line-chart'\n    },\n    width: {\n      type: Number,\n      default: 1000\n    },\n    height: {\n      type: Number,\n      default: 500\n    },\n    cssClasses: {\n      default: '',\n      type: String\n    },\n    styles: {\n      type: Object,\n      default: () => {}\n    },\n    plugins: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    simulationStart() {\n      const period = this.storagePeriod;\n      const demand = this.demand;\n      const supply = this.supply;\n      axios.post(`/api/monitoring/simulate`, {\n        period,\n        demand,\n        supply\n      }).then(res => {\n        this.GoData = res.data;\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n\n    setData() {\n      let id = this.$store.state.user.Coop_id;\n      const form = 'amount';\n      axios.post(`/api/statistics/month/${id}`, {\n        form\n      }, {\n        \"Content-Type\": \"application-json\"\n      }).then(res => {\n        this.chartData = res.data;\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n\n  },\n\n  async mounted() {\n    this.loaded = false;\n\n    try {\n      const {\n        userlist\n      } = await fetch('/api/userlist');\n      this.chartdata = userlist;\n      this.loaded = true;\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  created() {\n    this.setData();\n  }\n\n};","map":{"version":3,"mappings":"AAwCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,SACEC,KAAI,IAAKC,OADX,EAEEC,KAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP;AAWAP,OAAO,CAACQ,QAAR,CACEP,KADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,aAPF;AAUA,eAAe;EACXE,IAAI,EAAE,sBADK;EAEXC,UAAU,EAAE;IAAEb,SAAF;IAAaC;EAAb,CAFD;;EAGXa,IAAI,GAAG;IACH,OAAO;MACHC,aAAa,EAAE,IADZ;MAEHC,MAAM,EAAE,IAFL;MAGHC,MAAM,EAAE,IAHL;MAIHC,QAAQ,EAAE,IAJP;MAKHC,MAAM,EAAE,IALL;MAMHC,IAAI,EAAE,IANH;MAOHC,MAAM,EAAE;IAPL,CAAP;EASH,CAbU;;EAcXC,KAAK,EAAE;IACHC,OAAO,EAAE;MACLC,IAAI,EAAEC,MADD;MAELC,OAAO,EAAE;IAFJ,CADN;IAKHC,KAAK,EAAE;MACHH,IAAI,EAAEI,MADH;MAEHF,OAAO,EAAE;IAFN,CALJ;IASHG,MAAM,EAAE;MACJL,IAAI,EAAEI,MADF;MAEJF,OAAO,EAAE;IAFL,CATL;IAaHI,UAAU,EAAE;MACRJ,OAAO,EAAE,EADD;MAERF,IAAI,EAAEC;IAFE,CAbT;IAiBHM,MAAM,EAAE;MACJP,IAAI,EAAEQ,MADF;MAEJN,OAAO,EAAE,MAAM,CAAE;IAFb,CAjBL;IAqBHO,OAAO,EAAE;MACLT,IAAI,EAAEU,KADD;MAELR,OAAO,EAAE,MAAM;IAFV;EArBN,CAdI;EAwCXS,OAAO,EAAE;IACLC,eAAe,GAAG;MACd,MAAMC,MAAK,GAAI,KAAKtB,aAApB;MACA,MAAMC,MAAK,GAAI,KAAKA,MAApB;MACA,MAAMC,MAAK,GAAI,KAAKA,MAApB;MACAlB,KAAK,CAACuC,IAAN,CAAY,0BAAZ,EAAuC;QAAED,MAAF;QAAUrB,MAAV;QAAkBC;MAAlB,CAAvC,EACKsB,IADL,CACWC,GAAD,IAAS;QACX,KAAKrB,MAAL,GAAcqB,GAAG,CAAC1B,IAAlB;MAGH,CALL,EAMK2B,KANL,CAMYC,GAAD,IAAS;QACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CARL;IASH,CAdI;;IAeLG,OAAO,GAAG;MACN,IAAIC,EAAC,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,OAAhC;MACA,MAAMC,IAAG,GAAI,QAAb;MACApD,KAAK,CAACuC,IAAN,CAAY,yBAAwBQ,EAAG,EAAvC,EAA0C;QAAEK;MAAF,CAA1C,EAAoD;QAAE,gBAAgB;MAAlB,CAApD,EACKZ,IADL,CACWC,GAAD,IAAS;QACX,KAAKY,SAAL,GAAiBZ,GAAG,CAAC1B,IAArB;MACH,CAHL,EAIK2B,KAJL,CAIYC,GAAD,IAAS;QACZC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACH,CANL;IAOJ;;EAzBK,CAxCE;;EAmEX,MAAMW,OAAN,GAAgB;IACZ,KAAKhC,MAAL,GAAc,KAAd;;IAEA,IAAI;MACA,MAAM;QAAEiC;MAAF,IAAe,MAAMC,KAAK,CAAC,eAAD,CAAhC;MACA,KAAKC,SAAL,GAAiBF,QAAjB;MAEA,KAAKjC,MAAL,GAAc,IAAd;IACJ,CALA,CAKE,OAAOoC,CAAP,EAAU;MACRd,OAAO,CAACC,KAAR,CAAca,CAAd;IACJ;EACH,CA9EU;;EA+EXC,OAAO,GAAG;IACN,KAAKb,OAAL;EACJ;;AAjFW,CAAf","names":["axios","LineChart","Line","Chart","ChartJS","Title","Tooltip","Legend","LineElement","LinearScale","PointElement","CategoryScale","register","name","components","data","storagePeriod","demand","supply","engineGo","GoData","Data","loaded","props","chartId","type","String","default","width","Number","height","cssClasses","styles","Object","plugins","Array","methods","simulationStart","period","post","then","res","catch","err","console","error","setData","id","$store","state","user","Coop_id","form","chartData","mounted","userlist","fetch","chartdata","e","created"],"sourceRoot":"","sources":["D:\\project\\CoopERP\\front\\src\\pages\\Monitoring\\MonitoringSimulation.vue"],"sourcesContent":["<template>\r\n\r\n    <div class=\"simulation-input\">\r\n\r\n        <div class=\"input-group mt-4 mb-4\">\r\n            <label class=\"input-group-text\" id=\"inputGroup-sizing-default\">Storage period</label>\r\n            <input type=\"number\" min=\"0\" class=\"form-control\" name=\"storagePeroid\" id=\"storagePeroid\"\r\n                v-model=\"storagePeriod\">\r\n        </div>\r\n\r\n        <div class=\"input-group mb-4\">\r\n            <label class=\"input-group-text\" id=\"inputGroup-sizing-default\">Expected change in demand</label>\r\n            <span class=\"input-group-text\">+</span>\r\n            <input type=\"number\" min=\"0\" class=\"form-control\" name=\"demand\" id=\"demand\" v-model=\"demand\">\r\n            <span class=\"input-group-text\">%</span>\r\n        </div>\r\n\r\n        <div class=\"input-group mb-4\">\r\n            <label class=\"input-group-text\" id=\"inputGroup-sizing-default\">Expected change in supply</label>\r\n            <span class=\"input-group-text\">+</span>\r\n            <input type=\"number\" min=\"0\" class=\"form-control\" name=\"afterSowing\" id=\"supply\" v-model=\"supply\">\r\n            <span class=\"input-group-text\">%</span>\r\n        </div>\r\n        \r\n        <button class=\"btn btn-primary\" type=\"button\" @click=\"simulationStart\">Simulation</button>\r\n\r\n    </div>\r\n    \r\n\r\n    <div class=\"sim-result\">\r\n        <h1>Simulation Result</h1>\r\n        <Line v-if=\"loaded\" :chart-options=\"chartOptions\" :chart-data=\"chartData\" :chart-id=\"chartId\" :plugins=\"plugins\"\r\n            :css-classes=\"cssClasses\" :styles=\"styles\" :width=\"1000\" :height=\"400\" />\r\n        <span>{{ this.GoData }}</span>\r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport LineChart from '@/components/SimulateChart.vue'\r\nimport { Line } from 'vue-chartjs'\r\n\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  LinearScale,\r\n  PointElement,\r\n  CategoryScale\r\n} from 'chart.js'\r\n\r\nChartJS.register(\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  LinearScale,\r\n  PointElement,\r\n  CategoryScale\r\n)\r\n\r\nexport default {\r\n    name: \"monitoringSimulation\",\r\n    components: { LineChart, Line },\r\n    data() {\r\n        return {\r\n            storagePeriod: null,\r\n            demand: null,\r\n            supply: null,\r\n            engineGo: true,\r\n            GoData: null,\r\n            Data: null,\r\n            loaded: false\r\n        }\r\n    },\r\n    props: {\r\n        chartId: {\r\n            type: String,\r\n            default: 'line-chart'\r\n        },\r\n        width: {\r\n            type: Number,\r\n            default: 1000\r\n        },\r\n        height: {\r\n            type: Number,\r\n            default: 500\r\n        },\r\n        cssClasses: {\r\n            default: '',\r\n            type: String\r\n        },\r\n        styles: {\r\n            type: Object,\r\n            default: () => { }\r\n        },\r\n        plugins: {\r\n            type: Array,\r\n            default: () => []\r\n        }\r\n    },\r\n    methods: {\r\n        simulationStart() {\r\n            const period = this.storagePeriod\r\n            const demand = this.demand\r\n            const supply = this.supply\r\n            axios.post(`/api/monitoring/simulate`, { period, demand, supply })\r\n                .then((res) => {\r\n                    this.GoData = res.data;\r\n\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        },\r\n        setData() {\r\n            let id = this.$store.state.user.Coop_id;\r\n            const form = 'amount'\r\n            axios.post(`/api/statistics/month/${id}`, { form }, { \"Content-Type\": \"application-json\" })\r\n                .then((res) => {\r\n                    this.chartData = res.data;\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.loaded = false\r\n\r\n        try {\r\n            const { userlist } = await fetch('/api/userlist')\r\n            this.chartdata = userlist\r\n\r\n            this.loaded = true\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    },\r\n    created() {\r\n        this.setData()\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.simulation-input {\r\n    padding: 10px;\r\n    width: 50%;\r\n    margin-left: 100px;\r\n}\r\n.sim-result{\r\n\r\n    padding: 15px;\r\n    margin-left: 100px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}